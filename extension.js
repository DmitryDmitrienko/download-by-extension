// Generated by CoffeeScript 1.7.1

/*
Copyright (c) 2014 The Codeant Authors. All rights reserved.
Use of this source code is governed by a BSD-style license that can be
found in the LICENSE file.
Authors: 
 Anton Sinitsyn <sinicin2008@gmail.com>
 Dmitry Dmitrienko <dmitry.dmitrienko@outlook.com>
 Nickolai Rashevsky <rashevsky.n@gmail.com>
 */

(function() {
  chrome.downloads.onDeterminingFilename.addListener(function(item, __suggest) {
    var check_rule, get_new_file_name;
    check_rule = function(rule, profile, filename) {
      var t, types, _i, _len, _ref;
      types = profile[rule.select_index];
      _ref = types.ext;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        t = _ref[_i];
        if (filename.indexOf(t) > -1) {
          return true;
        }
      }
      return false;
    };
    get_new_file_name = function(rules, profile, filename) {
      var rule, _i, _len;
      for (_i = 0, _len = rules.length; _i < _len; _i++) {
        rule = rules[_i];
        if (check_rule(rule, profile, filename)) {
          filename = "" + rule.path + "/" + filename;
        }
      }
      return filename;
    };
    chrome.storage.sync.get('DBE_data', function(items) {
      var data, new_file_name, profile;
      data = items.DBE_data.data;
      profile = items.DBE_data.profile;
      new_file_name = get_new_file_name(data, profile, item.filename);
      return __suggest({
        filename: new_file_name,
        conflict_action: 'overwrite',
        conflictAction: 'overwrite'
      });
    });
    return true;
  });

}).call(this);
